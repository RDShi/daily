基础知识
在Web应用中，服务器把网页传给浏览器，实际上就是把网页的HTML代码发送给浏览器，让浏览器显示出来。而浏览器和服务器之间的传输协议是HTTP，所以：
HTML是一种用来定义网页的文本，会HTML，就可以编写网页（<p></p>之类的）；
HTTP是在网络上传输HTML的协议，用于浏览器和服务器的通信。

IP地址实际上是一个32位整数（称为IPv4），以字符串表示的IP地址如192.168.0.1实际上是把32位整数按8位分组后的数字表示，目的是便于阅读。
IPv6地址实际上是一个128位整数，它是目前使用的IPv4的升级版，以字符串表示类似于2001:0db8:85a3:0042:1000:8a2e:0370:7334。
TCP协议则是建立在IP协议之上的。TCP协议负责在两台计算机之间建立可靠连接，保证数据包按顺序到达。TCP协议会通过握手建立连接，然后，对每个IP包编号，确保对方按顺序收到，如果包丢掉了，就自动重发。
许多常用的更高级的协议都是建立在TCP协议基础上的，比如用于浏览器的HTTP协议、发送邮件的SMTP协议等。
一个TCP报文除了包含要传输的数据外，还包含源IP地址和目标IP地址，源端口和目标端口。
在两台计算机通信时，只发IP地址是不够的，因为同一台计算机上跑着多个网络程序。一个TCP报文来了之后，到底是交给浏览器还是QQ，就需要端口号来区分。每个网络程序都向操作系统申请唯一的端口号，这样，两个进程在两台计算机之间建立网络连接就需要各自的IP地址和各自的端口号。
一个进程也可能同时与多个计算机建立链接，因此它会申请很多端口。



selenium
F12-左上角，点击要定位的，copy-xpath，注意iframe

from selenium import webdriver
drv=webdriver.Ie()
t1=drv.finde_element_by_css_selector(“div:nth(2)”)
t1.text
t2=drv.finde_element_by_css_selector(“div:nth(3)”)
t2.text

4.获得了session对象后，要定位元素，webdriver提供了一系列的元素定位方法，常用的有以下几种方式：

id

name

class-name

link

text

partial

link

text

tag

name

xpath：***可以通过内容查找，非常方便

cssselector



find_element_by_class_name

button = browser.find_element_by_class_name('btn-search')
button.click()


#模拟键盘Enter 键  
from selenium.webdriver import ActionChains
ActionChains(driver).send_keys(Keys.ENTER).perform() 


getText()：用户获取某个元素的文本值,比如链接,纯文本等



a=10
b=0
try:
    c=a/b
    print c
except ZeroDivisionError,e:
    print e.message
print（"done"）

当执行完抓取操作后，必须关闭session，不然让它一直占内存会影响机器其他进程的运行。browser.close()或者browser.quit()都可以关闭session，前者只是关闭当前的session，浏览器的webdriver不关闭，后者则是包括webdriver这些东西全部shut down